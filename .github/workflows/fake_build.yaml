name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

env:
  CARGO_TERM_COLOR: always

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile
    steps:
      - uses: actions/checkout@v2
      - name: Load Cache
        uses: Swatinem/rust-cache@v1
        with:
          working-directory: ./k8s
      - uses: actions-rs/cargo@v1
        name: Compile
        with:
          command: build
          args: --release --workspace --manifest-path ./k8s/Cargo.toml
      - name: Archive the ACM
        uses: actions/upload-artifact@v2
        with:
          name: acm
          path: k8s/target/release/acm
      - name: Archive the AIM
        uses: actions/upload-artifact@v2
        with:
          name: aim
          path: k8s/target/release/aim

  docker:
    needs: compile
    runs-on: ubuntu-latest
    name: Build Images
    steps:
      - uses: actions/checkout@v2
      - name: Prep Workspace
        run: mkdir -p k8s/target/release
      - name: Download the Archived ACM
        uses: actions/download-artifact@v2
        with:
          name: acm
          path: k8s/target/release
      - name: Download the Archived ACM
        uses: actions/download-artifact@v2
        with:
          name: aim
          path: k8s/target/release
      - name: Package
        working-directory: k8s
        run: ./package.sh
        env:
          REGISTRY: 248135293344.dkr.ecr.us-east-2.amazonaws.com
      - name: Archive the ACM
        uses: actions/upload-artifact@v2
        with:
          name: acm
          path: k8s/target/images/acm/acm
      - name: Archive the AIM
        uses: actions/upload-artifact@v2
        with:
          name: aim
          path: k8s/target/images/aim/aim
      - name: Archive containerd
        uses: actions/upload-artifact@v2
        with:
          name: containerd
          path: k8s/target/images/containerd/containerd

  helm:
    runs-on: ubuntu-latest
    name: Package Helm Charts
    steps:
      - name: Helm Package
        run: helm

  release:
    needs: docker
    name: Release to ECR
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: datetime
      - name: Checkit
        run: ls
      - name: Checkit 2
        run: cat wat